rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if (request.auth.uid == userId && request.auth.token.firebase.sign_in_provider != "anonymous")
        || isAdmin();
    }

    match /settings {
      match /{userId} {
        allow read, write: if request.auth.uid == userId
          && request.auth.token.firebase.sign_in_provider != "anonymous";
      }

      match /undefined {
        allow read, write: if false;
      }
    }

    match /rooms {
      match /{roomId} {
        allow read: if request.auth.uid == resource.data.owner || isRegistered();
        allow create: if request.auth.uid == request.resource.data.owner;
        allow update: if request.auth.uid == resource.data.owner ||
          (isRegistered() &&
            (valueChanged("state") &&
              !valueChanged("owner") &&
              !valueChanged("displayName") &&
              !valueChanged("lastSessionEnd") &&
              !valueChanged("passwordHash")));
        allow delete: if false;

        match /members/{userId} {
          allow read: if isRoomOwner() || isRegistered();
          allow write: if request.auth.uid == userId && (isRoomOwner() || isRegistered());
        }

        match /registeredMembers/{userId} {
          allow read: if isRoomOwner();
        }

        function isRoomOwner() {
          return request.auth.uid == get(/databases/$(database)/documents/rooms/$(roomId)).data.owner;
        }

        function isRegistered() {
          return exists(/databases/$(database)/documents/rooms/$(roomId)/registeredMembers/$(request.auth.uid));
        }
      }
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "Admin";
    }
  }

  function valueChanged(key) {
    return request.resource.data.get(key, null) != resource.data.get(key, null);
  }
}